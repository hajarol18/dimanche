# Requirements.txt pour SmartAgriDecision - Module Odoo 18
# Dépendances Python pour l'IA, la géospatiale et l'analyse des données

# === CORE DATA SCIENCE ===
pandas>=2.0.0
numpy>=1.24.0
scipy>=1.10.0

# === MACHINE LEARNING & AI ===
scikit-learn>=1.3.0
xgboost>=2.0.0
lightgbm>=4.0.0
catboost>=1.2.0

# === DEEP LEARNING (optionnel) ===
tensorflow>=2.13.0
torch>=2.0.0
keras>=2.13.0

# === GEOSPATIAL & MAPPING ===
geopandas>=0.13.0
shapely>=2.0.0
pyproj>=3.6.0
fiona>=1.9.0
rasterio>=1.3.0
folium>=0.14.0
leafmap>=0.25.0

# === DATABASE & ORM ===
psycopg2-binary>=2.9.0
sqlalchemy>=2.0.0
alembic>=1.11.0

# === WEB & API ===
requests>=2.31.0
fastapi>=0.100.0
uvicorn>=0.23.0
aiohttp>=3.8.0

# === DATA PROCESSING ===
dask>=2023.0.0
vaex>=4.17.0
modin>=0.20.0

# === VISUALIZATION ===
matplotlib>=3.7.0
seaborn>=0.12.0
plotly>=5.15.0
bokeh>=3.2.0
altair>=5.0.0

# === STATISTICS & ANALYSIS ===
statsmodels>=0.14.0
scipy>=1.10.0
pingouin>=0.5.0

# === CLIMATE & WEATHER ===
xarray>=2023.0.0
netCDF4>=1.6.0
cdsapi>=0.6.0
meteostat>=1.0.0

# === IMAGE PROCESSING ===
Pillow>=10.0.0
opencv-python>=4.8.0
scikit-image>=0.21.0

# === UTILITIES ===
python-dateutil>=2.8.0
pytz>=2023.0
tqdm>=4.65.0
click>=8.1.0
rich>=13.0.0

# === TESTING ===
pytest>=7.4.0
pytest-cov>=4.1.0
pytest-mock>=3.11.0

# === DEVELOPMENT ===
black>=23.0.0
flake8>=6.0.0
mypy>=1.5.0
pre-commit>=3.3.0

# === DOCUMENTATION ===
sphinx>=7.0.0
sphinx-rtd-theme>=1.3.0
myst-parser>=2.0.0

# === MONITORING & LOGGING ===
loguru>=0.7.0
structlog>=23.1.0
prometheus-client>=0.17.0

# === SECURITY ===
cryptography>=41.0.0
python-jose>=3.3.0
passlib>=1.7.0

# === PERFORMANCE ===
numba>=0.57.0
cython>=3.0.0
pypy3>=7.3.0

# === SPECIFIC TO SMARTAGRI ===
# Modèles pré-entraînés pour l'agriculture
agri-ml-models>=1.0.0
soil-analysis-tools>=2.0.0
crop-prediction-models>=1.5.0

# Intégration avec services météo
openweathermap-api>=1.0.0
meteomatics-api>=2.0.0
weather-api-client>=1.2.0

# === VERSION SPECIFIC ===
# Compatible Python 3.8+
# Compatible Odoo 18
# Compatible PostgreSQL 12+
# Compatible PostGIS 3.0+

# === INSTALLATION NOTES ===
# pip install -r requirements.txt
# ou
# conda env create -f environment.yml
# ou
# poetry install

# === TROUBLESHOOTING ===
# Si psycopg2-binary échoue, utiliser:
# pip install psycopg2
# (nécessite libpq-dev sur Ubuntu/Debian)

# === OPTIONAL DEPENDENCIES ===
# Pour GPU acceleration:
# tensorflow-gpu>=2.13.0
# torch+cuda (selon votre version CUDA)

# Pour développement local:
# jupyter>=1.0.0
# ipython>=8.0.0
# notebook>=7.0.0
