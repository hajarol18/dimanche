#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de correction de 'fruits' en 'arboriculture' dans le champ type_exploitation des exploitations
"""

import os
import re

def corriger_fichier_xml():
    fichier = "addons/smart_agri_decision/data/demo_data_maroc.xml"
    
    if not os.path.exists(fichier):
        print(f"‚ùå Fichier {fichier} non trouv√©")
        return False
    
    print(f"üìù Lecture du fichier {fichier}...")
    
    # Lire le fichier
    with open(fichier, 'r', encoding='utf-8') as f:
        contenu = f.read()
    
    # Correction : 'fruits' -> 'arboriculture' dans type_exploitation des exploitations
    # Pattern pour trouver le champ type_exploitation dans les exploitations
    pattern_exploitation_type = r'(<field name="type_exploitation">)fruits(</field>)'
    
    # Remplacer dans ce contexte
    contenu_corrige = re.sub(pattern_exploitation_type, r'\1arboriculture\2', contenu)
    
    # Compter les remplacements
    nb_remplacements = contenu.count('type_exploitation">fruits') - contenu_corrige.count('type_exploitation">fruits')
    
    if nb_remplacements > 0:
        print(f"‚úÖ {nb_remplacements} occurrence(s) de 'fruits' corrig√©e(s) en 'arboriculture' dans type_exploitation des exploitations")
    else:
        print("‚úÖ Aucune correction n√©cessaire")
    
    # √âcrire le fichier corrig√©
    with open(fichier, 'w', encoding='utf-8') as f:
        f.write(contenu_corrige)
    
    print(f"‚úÖ Fichier {fichier} corrig√© avec succ√®s")
    
    return True

if __name__ == "__main__":
    print("üîß CORRECTION DE 'FRUITS' EN 'ARBORICULTURE' DANS TYPE_EXPLOITATION")
    print("=" * 80)
    
    success = corriger_fichier_xml()
    
    if success:
        print("\n‚úÖ Script termin√© avec succ√®s")
        print("üéØ Maintenant vous pouvez essayer la mise √† jour du module")
        print("üìã Correction appliqu√©e :")
        print("   - fruits -> arboriculture (dans type_exploitation des exploitations)")
        print("   - arboriculture est une valeur valide pour type_exploitation")
    else:
        print("\n‚ùå Script termin√© avec des erreurs")
